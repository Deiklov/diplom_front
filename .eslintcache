[{"/home/andrey/parkmail_3sem/my-app/src/index.tsx":"1","/home/andrey/parkmail_3sem/my-app/src/reportWebVitals.ts":"2","/home/andrey/parkmail_3sem/my-app/src/App.tsx":"3","/home/andrey/parkmail_3sem/my-app/src/presentation/view-model/auth/AuthViewModelImpl.tsx":"4","/home/andrey/parkmail_3sem/my-app/src/data/auth/UserApi.tsx":"5","/home/andrey/parkmail_3sem/my-app/src/domain/entity/auth/models/AuthHolder.tsx":"6","/home/andrey/parkmail_3sem/my-app/src/presentation/view/auth/AuthComponent.tsx":"7","/home/andrey/parkmail_3sem/my-app/src/presentation/view/auth/SignUp.tsx":"8","/home/andrey/parkmail_3sem/my-app/src/presentation/view/profile/Profile.tsx":"9","/home/andrey/parkmail_3sem/my-app/src/presentation/view-model/auth/SignUpVMImpl.tsx":"10","/home/andrey/parkmail_3sem/my-app/src/domain/interactors/auth/LoginUseCase.tsx":"11","/home/andrey/parkmail_3sem/my-app/src/presentation/util/FormValidator.tsx":"12"},{"size":543,"mtime":1612293035483,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1612291860898,"results":"15","hashOfConfig":"14"},{"size":1935,"mtime":1612855318535,"results":"16","hashOfConfig":"14"},{"size":3773,"mtime":1612292139257,"results":"17","hashOfConfig":"14"},{"size":2003,"mtime":1612855318535,"results":"18","hashOfConfig":"14"},{"size":1212,"mtime":1612292139253,"results":"19","hashOfConfig":"14"},{"size":5240,"mtime":1612855318535,"results":"20","hashOfConfig":"14"},{"size":3890,"mtime":1612855318535,"results":"21","hashOfConfig":"14"},{"size":1371,"mtime":1612856416073,"results":"22","hashOfConfig":"14"},{"size":2014,"mtime":1612855318535,"results":"23","hashOfConfig":"14"},{"size":1307,"mtime":1612855318535,"results":"24","hashOfConfig":"14"},{"size":167,"mtime":1612292139253,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"176ry1f",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/andrey/parkmail_3sem/my-app/src/index.tsx",[],["53","54"],"/home/andrey/parkmail_3sem/my-app/src/reportWebVitals.ts",[],"/home/andrey/parkmail_3sem/my-app/src/App.tsx",[],"/home/andrey/parkmail_3sem/my-app/src/presentation/view-model/auth/AuthViewModelImpl.tsx",[],"/home/andrey/parkmail_3sem/my-app/src/data/auth/UserApi.tsx",[],"/home/andrey/parkmail_3sem/my-app/src/domain/entity/auth/models/AuthHolder.tsx",[],"/home/andrey/parkmail_3sem/my-app/src/presentation/view/auth/AuthComponent.tsx",[],"/home/andrey/parkmail_3sem/my-app/src/presentation/view/auth/SignUp.tsx",["55","56","57","58"],"import React from 'react';\nimport {Form, Input, InputNumber, Button} from 'antd';\nimport SignupViewModel from \"../../view-model/auth/SignUpViewModel\";\nimport BaseView from \"../BaseView\";\n\nexport interface SignupComponentProps {\n    signupViewModel: SignupViewModel;\n}\n\n// export interface SignupComponentState {\n//     ageQuery: string;\n//     authStatus: string;\n//     emailQuery: string;\n//     nameQuery: string;\n//     passwordQuery: string;\n// }\n\nexport default class SignupComponent extends React.Component<SignupComponentProps, {}> implements BaseView {\n    private signupViewModel: SignupViewModel;\n\n    public constructor(props: SignupComponentProps) {\n        super(props);\n        const {signupViewModel} = this.props;\n        this.signupViewModel = signupViewModel;\n\n        this.state = {\n            emailQuery: signupViewModel.emailQuery,\n            passwordQuery: signupViewModel.passwordQuery,\n            ageQuery: signupViewModel.ageQuery,\n            nameQuery: signupViewModel.nameQuery,\n            authStatus: signupViewModel.authStatus,\n\n        };\n    }\n\n    private layout = {\n        labelCol: {span: 8},\n        wrapperCol: {span: 16},\n    };\n\n    private validateMessages = {\n        required: '${label} is required!',\n        types: {\n            email: '${label} is not a valid email!',\n            number: '${label} is not a valid number!',\n        },\n        number: {\n            range: '${label} must be between ${min} and ${max}',\n        },\n    };\n\n    onFinish = (values: any) => {\n        console.log('Success:', values);\n    };\n\n    public onViewModelChanged(): void {\n        this.setState({\n            emailQuery: this.signupViewModel.emailQuery,\n            passwordQuery: this.signupViewModel.passwordQuery,\n            nameQuery: this.signupViewModel.nameQuery,\n            ageQuery: this.signupViewModel.ageQuery,\n            authStatus: this.signupViewModel.authStatus,\n        });\n    }\n\n\n    public render(): JSX.Element {\n        return (\n            <Form {...this.layout} name=\"nest-messages\" onFinish={this.onFinish}\n                  validateMessages={this.validateMessages}>\n                <Form.Item name={['user', 'name']} label=\"Name\" rules={[{required: true}]}>\n                    <Input onChange={(e: React.FormEvent<HTMLInputElement>): void => {\n                        this.signupViewModel.onNameQueryChanged(e.currentTarget.value);\n                    }}/>\n                </Form.Item>\n                <Form.Item name={['user', 'email']} label=\"Email\" rules={[{type: 'email'}]}>\n                    <Input onChange={(e: React.FormEvent<HTMLInputElement>): void => {\n                        this.signupViewModel.onEmailQueryChanged(e.currentTarget.value);\n                    }}/>\n                </Form.Item>\n                <Form.Item name={['user', 'age']} label=\"Age\" rules={[{type: 'number', min: 0, max: 99}]}>\n                    <InputNumber onChange={(value: string | number | null | undefined): void => {\n                        this.signupViewModel.onAgeQueryChanged(String(value));\n                    }}/>\n                </Form.Item>\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[{required: true, message: 'Please input your password!'}]}\n                >\n                    <Input.Password onChange={(e: React.FormEvent<HTMLInputElement>): void => {\n                        this.signupViewModel.onPasswordQueryChanged(e.currentTarget.value);\n                    }}/>\n                </Form.Item>\n                <Form.Item wrapperCol={{...this.layout.wrapperCol, offset: 8}}>\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={(): void => this.signupViewModel.onClickSubmit()}>\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}","/home/andrey/parkmail_3sem/my-app/src/presentation/view/profile/Profile.tsx",["59","60"],"import React from 'react';\nimport BaseView from '../BaseView';\nimport 'antd/dist/antd.css'\nimport {Avatar} from 'antd';\nimport {UserOutlined} from '@ant-design/icons';\nimport {Card} from 'antd';\n\nexport default class ProfileComponent extends React.Component {\n    public constructor(props: {}) {\n        super(props);\n\n    }\n\n    public render(): JSX.Element {\n        return (\n            <>\n                <div>\n                    <Avatar size={64} icon={<UserOutlined/>}/>\n                    <Avatar size=\"large\" icon={<UserOutlined/>}/>\n                    <Avatar icon={<UserOutlined/>}/>\n                    <Avatar size=\"small\" icon={<UserOutlined/>}/>\n                </div>\n                <div>\n                    <Avatar shape=\"square\" size={64} icon={<UserOutlined/>}/>\n                    <Avatar shape=\"square\" size=\"large\" icon={<UserOutlined/>}/>\n                    <Avatar shape=\"square\" icon={<UserOutlined/>}/>\n                    <Avatar shape=\"square\" size=\"small\" icon={<UserOutlined/>}/>\n                </div>\n                <Card title=\"Карточка юзера\" extra={<a href=\"#\">More</a>} style={{width: 300}}>\n                    <p>Имя: Андрей</p>\n                    <p>Фамилия: Романов</p>\n                    <p>Почта:  romanov408g@mail.ru</p>\n                </Card>\n            </>\n        )\n    }\n}","/home/andrey/parkmail_3sem/my-app/src/presentation/view-model/auth/SignUpVMImpl.tsx",[],"/home/andrey/parkmail_3sem/my-app/src/domain/interactors/auth/LoginUseCase.tsx",[],"/home/andrey/parkmail_3sem/my-app/src/presentation/util/FormValidator.tsx",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":42,"column":19,"nodeType":"67","messageId":"68","endLine":42,"endColumn":42},{"ruleId":"65","severity":1,"message":"66","line":44,"column":20,"nodeType":"67","messageId":"68","endLine":44,"endColumn":52},{"ruleId":"65","severity":1,"message":"66","line":45,"column":21,"nodeType":"67","messageId":"68","endLine":45,"endColumn":54},{"ruleId":"65","severity":1,"message":"66","line":48,"column":20,"nodeType":"67","messageId":"68","endLine":48,"endColumn":64},{"ruleId":"69","severity":1,"message":"70","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":29,"column":53,"nodeType":"75","endLine":29,"endColumn":65},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","@typescript-eslint/no-unused-vars","'BaseView' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]